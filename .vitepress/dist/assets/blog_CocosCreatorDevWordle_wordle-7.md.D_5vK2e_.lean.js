import{_ as n,c as h,a as i,a5 as a,j as s,bz as k,bA as l,bB as p,bC as t,o as E,bD as e,bE as r,bF as d,bG as g,bH as y,bI as F}from"./chunks/framework.C1oSJDt2.js";const I=JSON.parse('{"title":"cocos creator实现wordle游戏（七）","description":"","frontmatter":{},"headers":[],"relativePath":"blog/CocosCreatorDevWordle/wordle-7.md","filePath":"blog/CocosCreatorDevWordle/wordle-7.md","lastUpdated":1721491738000}'),c={name:"blog/CocosCreatorDevWordle/wordle-7.md"},o=a("",6),C=a("",12),B=s("p",{align:"center"},[s("img",{src:k})],-1),A=s("p",{align:"center"},[s("img",{src:l})],-1),D=s("p",{align:"center"},[s("img",{src:p})],-1),u=s("p",{align:"center"},[s("img",{src:t})],-1),m=a("",20),b=a("",9);function _(w,S,f,L,x,N){return E(),h("div",null,[o,i(" 在“数据库”页面就可以进行数据库的创建等操作了： "),C,i("   然后在project.config.json中配置云函数的路径为刚刚新建的“cloudfunctions”文件夹： "),B,i("   此时可以看到 “cloudfunctions”文件夹已经变成黄色，并且有了云朵的图案了。右键创建云函数： "),A,i("   输入云函数名称“getOpenID”，点击回车就创建好了。云函数的入口也默认生成好了，如下图所示： "),D,i("   这个函数只用于获取用户的OpenID，其余不需要。在return里面只保留openid即可。然后右键点击getOpenID文件夹，选择“上传并部署：云端安装依赖”： "),u,i("   云函数部署好以后本地就不需要了，后续打包不用将cloudfunctions文件夹打包进去。在客户端的调用方式可以参考上面创建的wxCloud.ts中的getUserOpenID函数。 "),m,i("   Layout-column为Layout组件：设置为纵向排列。包含6个Label组件，分别设置显示内容“第一步”，“第二步”，“第三步”，“第四步”，“第五步”，“第六步”。 "),b])}const U=n(c,[["render",_]]);export{I as __pageData,U as default};
