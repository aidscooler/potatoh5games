import{_ as e,c as a,o,a2 as t}from"./chunks/framework.DP1QTWse.js";const g=JSON.parse('{"title":"Localization","description":"","frontmatter":{},"headers":[],"relativePath":"public/classic/emulatorJS-4.0.12/data/localization/readme.md","filePath":"public/classic/emulatorJS-4.0.12/data/localization/readme.md"}'),r={name:"public/classic/emulatorJS-4.0.12/data/localization/readme.md"},n=t('<h1 id="localization" tabindex="-1">Localization <a class="header-anchor" href="#localization" aria-label="Permalink to &quot;Localization&quot;">​</a></h1><p>Supported languages</p><p><code>en-US</code> - English US<br><code>pt-BR</code> - Portuguese<br><code>es-ES</code> - Spanish<br><code>el-GR</code> - Greek<br><code>ja-JA</code> - Japanese<br><code>zh-CN</code> - Chinese<br><code>hi-HI</code> - Hindi<br><code>ar-AR</code> - Arabic<br><code>jv-JV</code> - Javanese<br><code>ben-BEN</code> - Bengali<br><code>ru-RU</code> - Russian<br><code>de-GER</code> - German<br><code>ko-KO</code> - Korean<br><code>af-FR</code> - French<br></p><p>default: <code>en-US</code></p><p>add the line to your code to use</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EJS_language = &#39;&#39;; //language</span></span></code></pre></div><p>If the language file is not found or there was an error fetching the file, the emulator will default to english.</p><h2 id="credits" tabindex="-1">Credits <a class="header-anchor" href="#credits" aria-label="Permalink to &quot;Credits&quot;">​</a></h2><p>Translated for <code>es-ES</code> by <a href="https://github.com/cesarcristianodeoliveira" target="_blank" rel="noreferrer">@cesarcristianodeoliveira</a> <br> Translated for <code>el-GR</code> by <a href="https://github.com/imneckro" target="_blank" rel="noreferrer">@imneckro</a> <br> Translated for <code>ja-JA</code>, <code>hi-HI</code>, <code>ar-AR</code>, <code>jv-JV</code>, <code>ben-BEN</code>, <code>ru-RU</code>, <code>de-GER</code>, <code>ko-KO</code>, <code>af-FR</code> by <a href="https://github.com/allancoding" target="_blank" rel="noreferrer">@allancoding</a> <br> Translated for <code>pt-BR</code> originally by <a href="https://github.com/allancoding" target="_blank" rel="noreferrer">@allancoding</a> and updated by <a href="https://github.com/zmarteline" target="_blank" rel="noreferrer">@zmarteline</a><br> Translated for <code>zh-CN</code> originally by <a href="https://github.com/allancoding" target="_blank" rel="noreferrer">@allancoding</a> and updated by <a href="https://github.com/eric183" target="_blank" rel="noreferrer">@eric183</a><br> Translated for <code>pt-BR</code> originally by <a href="https://github.com/allancoding" target="_blank" rel="noreferrer">@allancoding</a> and updated by <a href="https://github.com/zmarteline" target="_blank" rel="noreferrer">@zmarteline</a> <br></p><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><p>Download the default <code>en.json</code> file and simply translate all the words that start with the <code>-</code> (remove the dash afterwards) then perform a pull request or open an issue with the file uploaded and I will add your work.</p><p>The <code>retroarch.json</code> are all the setting names for the menu. They will default to english if not found. You can set <code>EJS_settingsLanguage</code> to <code>true</code> to see the missing retroarch settings names for the current language. You can translate them and add the to the language file.</p><p>The control maping traslations for controllers are diffrent for each controller. They will need to be added to the language file if they are not in the default <code>en.json</code> file.</p><p>You can also use the <a href="./Translate.html">Translation Helper</a> tool to help you translate the file.</p><p>Please contribute!!</p><p>Enything that is incorrect or needs to be fix please perform a pull request!</p>',16),d=[n];function l(c,i,s,h,p,u){return o(),a("div",null,d)}const f=e(r,[["render",l]]);export{g as __pageData,f as default};
